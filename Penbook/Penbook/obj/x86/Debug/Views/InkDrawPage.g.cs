#pragma checksum "C:\GitHub\PenbookApp\Penbook\Penbook\Views\InkDrawPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "71D1B305E90D712843125221937108639C7AAC64B416C69118AC6CF8FF808E8C"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Penbook.Views
{
    partial class InkDrawPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_InkToolbar_TargetInkCanvas(global::Windows.UI.Xaml.Controls.InkToolbar obj, global::Windows.UI.Xaml.Controls.InkCanvas value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Controls.InkCanvas) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Controls.InkCanvas), targetNullValue);
                }
                obj.TargetInkCanvas = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton obj, global::System.Nullable<global::System.Boolean> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Boolean) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Boolean), targetNullValue);
                }
                obj.IsChecked = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class InkDrawPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IInkDrawPage_Bindings
        {
            private global::Penbook.Views.InkDrawPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.AppBarButton obj8;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj9;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj10;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj11;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj12;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj13;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj14;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj15;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj16;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj17;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj18;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj19;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj20;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj21;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj22;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj23;
            private global::Windows.UI.Xaml.Controls.InkToolbar obj29;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj31;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj32;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj33;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj34;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj35;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj36;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj37;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj38;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj39;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj40;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj41;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj42;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj43;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj44;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj45;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj46;
            private global::Windows.UI.Xaml.Controls.InkToolbarCustomToolButton obj47;
            private global::Windows.UI.Xaml.Controls.InkToolbarCustomToggleButton obj48;
            private global::Windows.UI.Xaml.Controls.InkToolbarCustomToggleButton obj49;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj8CommandDisabled = false;
            private static bool isobj9CommandDisabled = false;
            private static bool isobj10CommandDisabled = false;
            private static bool isobj11CommandDisabled = false;
            private static bool isobj12CommandDisabled = false;
            private static bool isobj13CommandDisabled = false;
            private static bool isobj14CommandDisabled = false;
            private static bool isobj15CommandDisabled = false;
            private static bool isobj16CommandDisabled = false;
            private static bool isobj17CommandDisabled = false;
            private static bool isobj18CommandDisabled = false;
            private static bool isobj19CommandDisabled = false;
            private static bool isobj20CommandDisabled = false;
            private static bool isobj21CommandDisabled = false;
            private static bool isobj22CommandDisabled = false;
            private static bool isobj23CommandDisabled = false;
            private static bool isobj29TargetInkCanvasDisabled = false;
            private static bool isobj31CommandDisabled = false;
            private static bool isobj32CommandDisabled = false;
            private static bool isobj33CommandDisabled = false;
            private static bool isobj34CommandDisabled = false;
            private static bool isobj35CommandDisabled = false;
            private static bool isobj36CommandDisabled = false;
            private static bool isobj37CommandDisabled = false;
            private static bool isobj38CommandDisabled = false;
            private static bool isobj39CommandDisabled = false;
            private static bool isobj40CommandDisabled = false;
            private static bool isobj41CommandDisabled = false;
            private static bool isobj42CommandDisabled = false;
            private static bool isobj43CommandDisabled = false;
            private static bool isobj44CommandDisabled = false;
            private static bool isobj45CommandDisabled = false;
            private static bool isobj46CommandDisabled = false;
            private static bool isobj47IsCheckedDisabled = false;
            private static bool isobj48IsCheckedDisabled = false;
            private static bool isobj49IsCheckedDisabled = false;

            private InkDrawPage_obj1_BindingsTracking bindingsTracking;

            public InkDrawPage_obj1_Bindings()
            {
                this.bindingsTracking = new InkDrawPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 104 && columnNumber == 74)
                {
                    isobj8CommandDisabled = true;
                }
                else if (lineNumber == 105 && columnNumber == 76)
                {
                    isobj9CommandDisabled = true;
                }
                else if (lineNumber == 108 && columnNumber == 68)
                {
                    isobj10CommandDisabled = true;
                }
                else if (lineNumber == 109 && columnNumber == 70)
                {
                    isobj11CommandDisabled = true;
                }
                else if (lineNumber == 110 && columnNumber == 72)
                {
                    isobj12CommandDisabled = true;
                }
                else if (lineNumber == 112 && columnNumber == 70)
                {
                    isobj13CommandDisabled = true;
                }
                else if (lineNumber == 113 && columnNumber == 70)
                {
                    isobj14CommandDisabled = true;
                }
                else if (lineNumber == 115 && columnNumber == 81)
                {
                    isobj15CommandDisabled = true;
                }
                else if (lineNumber == 116 && columnNumber == 81)
                {
                    isobj16CommandDisabled = true;
                }
                else if (lineNumber == 117 && columnNumber == 81)
                {
                    isobj17CommandDisabled = true;
                }
                else if (lineNumber == 118 && columnNumber == 77)
                {
                    isobj18CommandDisabled = true;
                }
                else if (lineNumber == 119 && columnNumber == 83)
                {
                    isobj19CommandDisabled = true;
                }
                else if (lineNumber == 120 && columnNumber == 81)
                {
                    isobj20CommandDisabled = true;
                }
                else if (lineNumber == 121 && columnNumber == 72)
                {
                    isobj21CommandDisabled = true;
                }
                else if (lineNumber == 123 && columnNumber == 96)
                {
                    isobj22CommandDisabled = true;
                }
                else if (lineNumber == 125 && columnNumber == 76)
                {
                    isobj23CommandDisabled = true;
                }
                else if (lineNumber == 42 && columnNumber == 67)
                {
                    isobj29TargetInkCanvasDisabled = true;
                }
                else if (lineNumber == 55 && columnNumber == 78)
                {
                    isobj31CommandDisabled = true;
                }
                else if (lineNumber == 56 && columnNumber == 80)
                {
                    isobj32CommandDisabled = true;
                }
                else if (lineNumber == 59 && columnNumber == 72)
                {
                    isobj33CommandDisabled = true;
                }
                else if (lineNumber == 60 && columnNumber == 74)
                {
                    isobj34CommandDisabled = true;
                }
                else if (lineNumber == 61 && columnNumber == 76)
                {
                    isobj35CommandDisabled = true;
                }
                else if (lineNumber == 63 && columnNumber == 74)
                {
                    isobj36CommandDisabled = true;
                }
                else if (lineNumber == 64 && columnNumber == 74)
                {
                    isobj37CommandDisabled = true;
                }
                else if (lineNumber == 66 && columnNumber == 85)
                {
                    isobj38CommandDisabled = true;
                }
                else if (lineNumber == 67 && columnNumber == 85)
                {
                    isobj39CommandDisabled = true;
                }
                else if (lineNumber == 68 && columnNumber == 85)
                {
                    isobj40CommandDisabled = true;
                }
                else if (lineNumber == 69 && columnNumber == 81)
                {
                    isobj41CommandDisabled = true;
                }
                else if (lineNumber == 70 && columnNumber == 87)
                {
                    isobj42CommandDisabled = true;
                }
                else if (lineNumber == 71 && columnNumber == 85)
                {
                    isobj43CommandDisabled = true;
                }
                else if (lineNumber == 72 && columnNumber == 76)
                {
                    isobj44CommandDisabled = true;
                }
                else if (lineNumber == 74 && columnNumber == 100)
                {
                    isobj45CommandDisabled = true;
                }
                else if (lineNumber == 76 && columnNumber == 80)
                {
                    isobj46CommandDisabled = true;
                }
                else if (lineNumber == 43 && columnNumber == 107)
                {
                    isobj47IsCheckedDisabled = true;
                }
                else if (lineNumber == 46 && columnNumber == 106)
                {
                    isobj48IsCheckedDisabled = true;
                }
                else if (lineNumber == 49 && columnNumber == 106)
                {
                    isobj49IsCheckedDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 8: // Views\InkDrawPage.xaml line 104
                        this.obj8 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 9: // Views\InkDrawPage.xaml line 105
                        this.obj9 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 10: // Views\InkDrawPage.xaml line 108
                        this.obj10 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 11: // Views\InkDrawPage.xaml line 109
                        this.obj11 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 12: // Views\InkDrawPage.xaml line 110
                        this.obj12 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 13: // Views\InkDrawPage.xaml line 112
                        this.obj13 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 14: // Views\InkDrawPage.xaml line 113
                        this.obj14 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 15: // Views\InkDrawPage.xaml line 115
                        this.obj15 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 16: // Views\InkDrawPage.xaml line 116
                        this.obj16 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 17: // Views\InkDrawPage.xaml line 117
                        this.obj17 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 18: // Views\InkDrawPage.xaml line 118
                        this.obj18 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 19: // Views\InkDrawPage.xaml line 119
                        this.obj19 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 20: // Views\InkDrawPage.xaml line 120
                        this.obj20 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 21: // Views\InkDrawPage.xaml line 121
                        this.obj21 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 22: // Views\InkDrawPage.xaml line 123
                        this.obj22 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 23: // Views\InkDrawPage.xaml line 125
                        this.obj23 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 29: // Views\InkDrawPage.xaml line 42
                        this.obj29 = (global::Windows.UI.Xaml.Controls.InkToolbar)target;
                        break;
                    case 31: // Views\InkDrawPage.xaml line 55
                        this.obj31 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 32: // Views\InkDrawPage.xaml line 56
                        this.obj32 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 33: // Views\InkDrawPage.xaml line 59
                        this.obj33 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 34: // Views\InkDrawPage.xaml line 60
                        this.obj34 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 35: // Views\InkDrawPage.xaml line 61
                        this.obj35 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 36: // Views\InkDrawPage.xaml line 63
                        this.obj36 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 37: // Views\InkDrawPage.xaml line 64
                        this.obj37 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 38: // Views\InkDrawPage.xaml line 66
                        this.obj38 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 39: // Views\InkDrawPage.xaml line 67
                        this.obj39 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 40: // Views\InkDrawPage.xaml line 68
                        this.obj40 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 41: // Views\InkDrawPage.xaml line 69
                        this.obj41 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 42: // Views\InkDrawPage.xaml line 70
                        this.obj42 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 43: // Views\InkDrawPage.xaml line 71
                        this.obj43 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 44: // Views\InkDrawPage.xaml line 72
                        this.obj44 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 45: // Views\InkDrawPage.xaml line 74
                        this.obj45 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 46: // Views\InkDrawPage.xaml line 76
                        this.obj46 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 47: // Views\InkDrawPage.xaml line 43
                        this.obj47 = (global::Windows.UI.Xaml.Controls.InkToolbarCustomToolButton)target;
                        this.bindingsTracking.RegisterTwoWayListener_47(this.obj47);
                        break;
                    case 48: // Views\InkDrawPage.xaml line 46
                        this.obj48 = (global::Windows.UI.Xaml.Controls.InkToolbarCustomToggleButton)target;
                        this.bindingsTracking.RegisterTwoWayListener_48(this.obj48);
                        break;
                    case 49: // Views\InkDrawPage.xaml line 49
                        this.obj49 = (global::Windows.UI.Xaml.Controls.InkToolbarCustomToggleButton)target;
                        this.bindingsTracking.RegisterTwoWayListener_49(this.obj49);
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IInkDrawPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Penbook.Views.InkDrawPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Penbook.Views.InkDrawPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_inkCanvas(obj.inkCanvas, phase);
                    }
                }
            }
            private void Update_ViewModel(global::Penbook.ViewModels.InkDrawViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_ZoomInCommand(obj.ZoomInCommand, phase);
                        this.Update_ViewModel_ZoomOutCommand(obj.ZoomOutCommand, phase);
                        this.Update_ViewModel_CutCommand(obj.CutCommand, phase);
                        this.Update_ViewModel_CopyCommand(obj.CopyCommand, phase);
                        this.Update_ViewModel_PasteCommand(obj.PasteCommand, phase);
                        this.Update_ViewModel_UndoCommand(obj.UndoCommand, phase);
                        this.Update_ViewModel_RedoCommand(obj.RedoCommand, phase);
                        this.Update_ViewModel_LoadImageFileCommand(obj.LoadImageFileCommand, phase);
                        this.Update_ViewModel_LoadPdfFileCommand(obj.LoadPdfFileCommand, phase);
                        this.Update_ViewModel_LoadInkFileCommand(obj.LoadInkFileCommand, phase);
                        this.Update_ViewModel_SaveInkFileCommand(obj.SaveInkFileCommand, phase);
                        this.Update_ViewModel_ExportAsImageCommand(obj.ExportAsImageCommand, phase);
                        this.Update_ViewModel_ExportAsPdfCommand(obj.ExportAsPdfCommand, phase);
                        this.Update_ViewModel_PrintCommand(obj.PrintCommand, phase);
                        this.Update_ViewModel_SaveOnCloudStorageCommand(obj.SaveOnCloudStorageCommand, phase);
                        this.Update_ViewModel_ClearAllCommand(obj.ClearAllCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_EnableLassoSelection(obj.EnableLassoSelection, phase);
                        this.Update_ViewModel_EnableTouch(obj.EnableTouch, phase);
                        this.Update_ViewModel_EnableMouse(obj.EnableMouse, phase);
                    }
                }
            }
            private void Update_ViewModel_ZoomInCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InkDrawPage.xaml line 104
                    if (!isobj8CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj8, obj, null);
                    }
                    // Views\InkDrawPage.xaml line 55
                    if (!isobj31CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj31, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ZoomOutCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InkDrawPage.xaml line 105
                    if (!isobj9CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj9, obj, null);
                    }
                    // Views\InkDrawPage.xaml line 56
                    if (!isobj32CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj32, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CutCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InkDrawPage.xaml line 108
                    if (!isobj10CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj10, obj, null);
                    }
                    // Views\InkDrawPage.xaml line 59
                    if (!isobj33CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj33, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CopyCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InkDrawPage.xaml line 109
                    if (!isobj11CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj11, obj, null);
                    }
                    // Views\InkDrawPage.xaml line 60
                    if (!isobj34CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj34, obj, null);
                    }
                }
            }
            private void Update_ViewModel_PasteCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InkDrawPage.xaml line 110
                    if (!isobj12CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj12, obj, null);
                    }
                    // Views\InkDrawPage.xaml line 61
                    if (!isobj35CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj35, obj, null);
                    }
                }
            }
            private void Update_ViewModel_UndoCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InkDrawPage.xaml line 112
                    if (!isobj13CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj13, obj, null);
                    }
                    // Views\InkDrawPage.xaml line 63
                    if (!isobj36CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj36, obj, null);
                    }
                }
            }
            private void Update_ViewModel_RedoCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InkDrawPage.xaml line 113
                    if (!isobj14CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj14, obj, null);
                    }
                    // Views\InkDrawPage.xaml line 64
                    if (!isobj37CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj37, obj, null);
                    }
                }
            }
            private void Update_ViewModel_LoadImageFileCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InkDrawPage.xaml line 115
                    if (!isobj15CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj15, obj, null);
                    }
                    // Views\InkDrawPage.xaml line 66
                    if (!isobj38CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj38, obj, null);
                    }
                }
            }
            private void Update_ViewModel_LoadPdfFileCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InkDrawPage.xaml line 116
                    if (!isobj16CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj16, obj, null);
                    }
                    // Views\InkDrawPage.xaml line 67
                    if (!isobj39CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj39, obj, null);
                    }
                }
            }
            private void Update_ViewModel_LoadInkFileCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InkDrawPage.xaml line 117
                    if (!isobj17CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj17, obj, null);
                    }
                    // Views\InkDrawPage.xaml line 68
                    if (!isobj40CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj40, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SaveInkFileCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InkDrawPage.xaml line 118
                    if (!isobj18CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj18, obj, null);
                    }
                    // Views\InkDrawPage.xaml line 69
                    if (!isobj41CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj41, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ExportAsImageCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InkDrawPage.xaml line 119
                    if (!isobj19CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj19, obj, null);
                    }
                    // Views\InkDrawPage.xaml line 70
                    if (!isobj42CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj42, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ExportAsPdfCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InkDrawPage.xaml line 120
                    if (!isobj20CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj20, obj, null);
                    }
                    // Views\InkDrawPage.xaml line 71
                    if (!isobj43CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj43, obj, null);
                    }
                }
            }
            private void Update_ViewModel_PrintCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InkDrawPage.xaml line 121
                    if (!isobj21CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj21, obj, null);
                    }
                    // Views\InkDrawPage.xaml line 72
                    if (!isobj44CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj44, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SaveOnCloudStorageCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InkDrawPage.xaml line 123
                    if (!isobj22CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj22, obj, null);
                    }
                    // Views\InkDrawPage.xaml line 74
                    if (!isobj45CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj45, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ClearAllCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InkDrawPage.xaml line 125
                    if (!isobj23CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj23, obj, null);
                    }
                    // Views\InkDrawPage.xaml line 76
                    if (!isobj46CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj46, obj, null);
                    }
                }
            }
            private void Update_inkCanvas(global::Windows.UI.Xaml.Controls.InkCanvas obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\InkDrawPage.xaml line 42
                    if (!isobj29TargetInkCanvasDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_InkToolbar_TargetInkCanvas(this.obj29, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EnableLassoSelection(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\InkDrawPage.xaml line 43
                    if (!isobj47IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj47, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EnableTouch(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\InkDrawPage.xaml line 46
                    if (!isobj48IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj48, obj, null);
                    }
                }
            }
            private void Update_ViewModel_EnableMouse(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\InkDrawPage.xaml line 49
                    if (!isobj49IsCheckedDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj49, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_47_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.EnableLassoSelection = (global::System.Boolean)this.obj47.IsChecked;
                        }
                    }
                }
            }
            private void UpdateTwoWay_48_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.EnableTouch = (global::System.Boolean)this.obj48.IsChecked;
                        }
                    }
                }
            }
            private void UpdateTwoWay_49_IsChecked()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.EnableMouse = (global::System.Boolean)this.obj49.IsChecked;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.1")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class InkDrawPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<InkDrawPage_obj1_Bindings> weakRefToBindingObj; 

                public InkDrawPage_obj1_BindingsTracking(InkDrawPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<InkDrawPage_obj1_Bindings>(obj);
                }

                public InkDrawPage_obj1_Bindings TryGetBindingObject()
                {
                    InkDrawPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    InkDrawPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Penbook.ViewModels.InkDrawViewModel obj = sender as global::Penbook.ViewModels.InkDrawViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_EnableLassoSelection(obj.EnableLassoSelection, DATA_CHANGED);
                                bindings.Update_ViewModel_EnableTouch(obj.EnableTouch, DATA_CHANGED);
                                bindings.Update_ViewModel_EnableMouse(obj.EnableMouse, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "EnableLassoSelection":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_EnableLassoSelection(obj.EnableLassoSelection, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EnableTouch":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_EnableTouch(obj.EnableTouch, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EnableMouse":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_EnableMouse(obj.EnableMouse, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Penbook.ViewModels.InkDrawViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::Penbook.ViewModels.InkDrawViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void RegisterTwoWayListener_47(global::Windows.UI.Xaml.Controls.InkToolbarCustomToolButton sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_47_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_48(global::Windows.UI.Xaml.Controls.InkToolbarCustomToggleButton sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_48_IsChecked();
                        }
                    });
                }
                public void RegisterTwoWayListener_49(global::Windows.UI.Xaml.Controls.InkToolbarCustomToggleButton sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_49_IsChecked();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\InkDrawPage.xaml line 10
                {
                    this.ContentArea = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 3: // Views\InkDrawPage.xaml line 12
                {
                    this.visualStateGroup = (global::Windows.UI.Xaml.VisualStateGroup)(target);
                }
                break;
            case 4: // Views\InkDrawPage.xaml line 13
                {
                    this.SmallVisualState = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 5: // Views\InkDrawPage.xaml line 23
                {
                    this.BigVisualState = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 6: // Views\InkDrawPage.xaml line 80
                {
                    this.canvasScroll = (global::Windows.UI.Xaml.Controls.ScrollViewer)(target);
                }
                break;
            case 7: // Views\InkDrawPage.xaml line 99
                {
                    this.bottomCommandBar = (global::Windows.UI.Xaml.Controls.CommandBar)(target);
                }
                break;
            case 24: // Views\InkDrawPage.xaml line 87
                {
                    this.container = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 25: // Views\InkDrawPage.xaml line 90
                {
                    this.imageContainer = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 26: // Views\InkDrawPage.xaml line 91
                {
                    this.inkCanvas = (global::Windows.UI.Xaml.Controls.InkCanvas)(target);
                }
                break;
            case 27: // Views\InkDrawPage.xaml line 94
                {
                    this.selectionCanvas = (global::Windows.UI.Xaml.Controls.Canvas)(target);
                }
                break;
            case 28: // Views\InkDrawPage.xaml line 41
                {
                    this.headerTitle = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 29: // Views\InkDrawPage.xaml line 42
                {
                    this.toolbar = (global::Windows.UI.Xaml.Controls.InkToolbar)(target);
                }
                break;
            case 30: // Views\InkDrawPage.xaml line 53
                {
                    this.topCommandBar = (global::Windows.UI.Xaml.Controls.CommandBar)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\InkDrawPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    InkDrawPage_obj1_Bindings bindings = new InkDrawPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

